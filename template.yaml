AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Resources for the TMF Mobile App

Globals:
  Function:
    # Runtime: nodejs20.x
    Handler: index.handler
    # Environment:
    #   Variables:

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AWS::StackName}-Users
      UsernameAttributes:
        - email
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      Policies:
        PasswordPolicy:
          MinimumLength: 10

  MobileAppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: MobileAppClient
      GenerateSecret: false
      UserPoolId: !Ref UserPool
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  AppSyncConsoleAppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: AppSyncConsoleAppClient
      GenerateSecret: false
      UserPoolId: !Ref UserPool
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  DataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}Data
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

  RealtimeAPI:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub ${AWS::StackName} Realtime API
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      IntrospectionConfig: ENABLED
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt LoggingRole.Arn
        FieldLogLevel: ERROR
      AdditionalAuthenticationProviders:
        - AuthenticationType: AWS_IAM
      UserPoolConfig:
        UserPoolId: !Ref UserPool
        AwsRegion: !Ref AWS::Region
        DefaultAction: ALLOW
      XrayEnabled: true

  GraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt RealtimeAPI.ApiId
      DefinitionS3Location: ./src/schema.graphql

  CreateWorkoutResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
      - GraphQLSchema
    Properties:
      ApiId: !GetAtt RealtimeAPI.ApiId
      TypeName: Mutation
      FieldName: createWorkout
      DataSourceName: !GetAtt DataTableSource.Name
      RequestMappingTemplateS3Location: ./src/resolvers/Mutation/createWorkout/request.vtl
      ResponseMappingTemplateS3Location: ./src/resolvers/Mutation/createWorkout/response.vtl

  CreateUserResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
      - GraphQLSchema
    Properties:
      ApiId: !GetAtt RealtimeAPI.ApiId
      TypeName: Mutation
      FieldName: createUser
      DataSourceName: !GetAtt DataTableSource.Name
      RequestMappingTemplateS3Location: ./src/resolvers/Mutation/createUser/request.vtl
      ResponseMappingTemplateS3Location: ./src/resolvers/Mutation/createUser/response.vtl

  QueryUserResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
      - GraphQLSchema
    Properties:
      ApiId: !GetAtt RealtimeAPI.ApiId
      TypeName: Query
      FieldName: user
      DataSourceName: !GetAtt DataTableSource.Name
      RequestMappingTemplateS3Location: ./src/resolvers/Query/user/request.vtl
      ResponseMappingTemplateS3Location: ./src/resolvers/Query/user/response.vtl

  WorkoutUserResolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
      - GraphQLSchema
    Properties:
      ApiId: !GetAtt RealtimeAPI.ApiId
      TypeName: Workout
      FieldName: user
      DataSourceName: !GetAtt DataTableSource.Name
      RequestMappingTemplateS3Location: ./src/resolvers/Workout/user/request.vtl
      ResponseMappingTemplateS3Location: ./src/resolvers/Workout/user/response.vtl

  DataTableSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ServiceRoleArn: !GetAtt DataTableSourceRole.Arn
      Type: AMAZON_DYNAMODB
      Name: DataTableSource
      ApiId: !GetAtt RealtimeAPI.ApiId
      DynamoDBConfig:
        AwsRegion: !Ref AWS::Region
        TableName: !Ref DataTable

  DataTableSourceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-DataTableSourceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: appsync.amazonaws.com
      Policies:
        - PolicyName: DataTableSourcePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt DataTable.Arn

  CloudwatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /TMF/${AWS::StackName}
      RetentionInDays: 14

  LoggingRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}LoggingRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: TMFAppLoggingPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*

  TMFAppDeveloperPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: TMFAppDeveloperPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:ListTables
            Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
          - Effect: Allow
            Action:
              - dynamodb:BatchGet*
              - dynamodb:Describe*
              - dynamodb:DeleteItem
              - dynamodb:Get*
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Resource:
              - !GetAtt DataTable.Arn
          - Effect: Allow
            Action:
              - appsync:List*
            Resource:
              - !Sub arn:aws:appsync:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Action:
              - appsync:Update*
              - appsync:Get*
              - appSync:StartSchemaCreation
              - appsync:Invoke
            Resource:
              - !Sub arn:aws:appsync:${AWS::Region}:${AWS::AccountId}:/v1/apis/${RealtimeAPI.ApiId}/*
          - Effect: Allow
            Action:
              - appsync:Invoke
            Resource:
              - !Sub arn:aws:appsync:${AWS::Region}:${AWS::AccountId}:/v1/apis/${RealtimeAPI.ApiId}/types/Mutation/fields/createWorkout
          - Effect: Allow
            Action:
              - cognito-idp:List*
            Resource:
              - !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*
          - Effect: Allow
            Action:
              - logs:FilterLogEvents
            Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/appsync/apis/${RealtimeAPI.ApiId}:*

  TMFAppDevelopers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: TMF-App-Developers
      ManagedPolicyArns:
        - !Ref TMFAppDeveloperPolicy